{"version":3,"sources":["components/Navbar.js","components/Input.js","components/About.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","theme","title","type","id","href","placeholder","textColor","class","mode","onClick","lightMode","darkMode","cobaltMode","bloodMode","Input","useState","text","setText","heading","style","backgroundColor","backColor","color","rows","value","onChange","event","target","disabled","length","newText","toUpperCase","displayChanger","showAlert","toLowerCase","replaceAll","document","getElementById","navigator","clipboard","writeText","select","split","join","filter","element","About","Alert","display","position","width","role","alertType","alert","App","setAlert","setAlertType","setDisplay","setTheme","setMode","setTextColor","setBackColor","message","setTimeout","body","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.cc39690f.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport default function Navbar(props) {\r\n    return (\r\n        <>\r\n            <nav className={`navbar navbar-expand-lg navbar-${props.theme} bg-${props.theme}`}>\r\n                <div className=\"container-fluid\">\r\n                    <div className=\"navbar-brand\">{props.title}</div>\r\n                    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                        <span className=\"navbar-toggler-icon\"></span>\r\n                    </button>\r\n                    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                        <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n                            <li className=\"nav-item\">\r\n                                <a className={`nav-link text-${props.theme === 'light' ? 'black' : 'light'}`} aria-current=\"page\" href=\"/\">Home</a>\r\n                            </li>\r\n                            <li className=\"nav-item\">\r\n                                <a className={`nav-link text-${props.theme === 'light' ? 'black' : 'light'}`} href=\"/\">About</a>\r\n                            </li>\r\n                            <li className=\"nav-item\">\r\n                                <a className={`nav-link text-${props.theme === 'light' ? 'black' : 'light'}`} href=\"/\">Contact</a>\r\n                            </li>\r\n                        </ul>\r\n                        <form className=\"d-flex\">\r\n                            <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\" />\r\n                            <button className={`btn btn-outline-secondary text-${props.textColor}`} type=\"submit\">Search</button>\r\n                        </form>\r\n                        <div class=\"dropdown my-2\">\r\n                            <button className={`btn btn-${props.mode} dropdown-toggle mx-4`} type=\"button\" id=\"dropdownMenuButton1\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\r\n                                Select Theme\r\n                            </button>\r\n                            <ul class=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton1\">\r\n                                <li><div className=\"dropdown-item\" onClick={props.lightMode}>Light</div></li>\r\n                                <li><div className=\"dropdown-item\" onClick={props.darkMode}>Dark</div></li>\r\n                                <li><div className=\"dropdown-item\" onClick={props.cobaltMode}>Cobalt</div></li>\r\n                                <li><div className=\"dropdown-item\" onClick={props.bloodMode}>Blood</div></li>\r\n                            </ul>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </nav>\r\n        </>\r\n    )\r\n}\r\n","import React, { useState } from 'react';\r\n\r\nexport default function Input(props) {\r\n    const [text, setText] = useState(\"\");\r\n    const upperCase = () => {\r\n        let newText = text.toUpperCase();\r\n        setText(newText);\r\n        props.displayChanger();\r\n        props.showAlert(\"success\", \"Your text has been converted to Upper Case!\");\r\n    }\r\n    const lowerCase = () => {\r\n        let newText = text.toLowerCase();\r\n        setText(newText);\r\n        props.displayChanger();\r\n        props.showAlert(\"success\", \"Your text has been converted to Lower Case!\");\r\n    }\r\n    const snakeCase = () => {\r\n        let newText = text.replaceAll(\" \", \"_\");\r\n        setText(newText);\r\n        props.displayChanger();\r\n        props.showAlert(\"success\", \"Your text has been converted to Snake Case!\");\r\n    }\r\n    const removeSnakeCase = () => {\r\n        let newText = text.replaceAll(\"_\", \" \");\r\n        setText(newText);\r\n        props.displayChanger();\r\n        props.showAlert(\"success\", \"Snake Case has been removed!\");\r\n    }\r\n    const copyText = () => {\r\n        let textInput = document.getElementById(\"textInput\");\r\n        textInput = navigator.clipboard.writeText(text);\r\n        props.displayChanger();\r\n        props.showAlert(\"success\", \"Your text Copied to Clipboard!\");\r\n    }\r\n    const selectText = () => {\r\n        let textInput = document.getElementById(\"textInput\");\r\n        textInput.select();\r\n        props.displayChanger();\r\n        props.showAlert(\"success\", \"Your text is Selected!\");\r\n    }\r\n    const clearText = () => {\r\n        setText(\"\");\r\n        props.displayChanger();\r\n        props.showAlert(\"success\", \"Your text is Cleard!\");\r\n    }\r\n    const RemoveExtraSpaces = () => {\r\n        const newText = text.split(/[ ]+/);\r\n        setText(newText.join([\" \"]));\r\n        props.displayChanger();\r\n        props.showAlert(\"success\", \"All the extra spaces have been removed from your text!\");\r\n    }\r\n    const changeEvent = (event) => {\r\n        setText(event.target.value);\r\n    }\r\n    return (\r\n        <>\r\n            <div className=\"container\">\r\n                <div className=\"my-3\">\r\n                    <label className=\"form-label\"><h2>{props.heading}</h2></label>\r\n                    <textarea className=\"form-control\" id=\"textInput\" style={{backgroundColor: props.backColor, color: props.textColor}} rows=\"13\" placeholder=\"Enter Your Text Here\" value={text} onChange={changeEvent}>{text}</textarea>\r\n                </div>\r\n                <button className={`btn btn-${props.mode} m-2`} disabled={text.length===0} onClick={upperCase}>Convert to Upper Case</button>\r\n                <button className={`btn btn-${props.mode} m-2`} disabled={text.length===0} onClick={lowerCase}>Convert to Lower Case</button>\r\n                <button className={`btn btn-${props.mode} m-2`} disabled={text.length===0} onClick={snakeCase}>Convert to Snake Case</button>\r\n                <button className={`btn btn-${props.mode} m-2`} disabled={text.length===0} onClick={removeSnakeCase}>Remove Snake Case</button>\r\n                <button className={`btn btn-${props.mode} m-2`} disabled={text.length===0} onClick={copyText}>Copy to Clipboard</button>\r\n                <button className={`btn btn-${props.mode} m-2`} disabled={text.length===0} onClick={selectText}>Select All the Text</button>\r\n                <button className={`btn btn-${props.mode} m-2`} disabled={text.length===0} onClick={clearText}>Clear All the Text</button>\r\n                <button className={`btn btn-${props.mode} m-2`} disabled={text.length===0} onClick={RemoveExtraSpaces}>Remove Extra Spaces</button>\r\n            </div>\r\n            <div className=\"container my-4\">\r\n                <h4 className=\"mx-4\">There are {text.split(/\\s+/).filter((element)=>{return element.length !==0}).length} words and  {text.length} characters in your content.</h4>\r\n                <h4 className=\"mx-4\"></h4>\r\n                <h4 className=\"mx-4\">Content Preview</h4>\r\n                <p className={`m-4 ${text.length===0?'p-0':'p-2'} border border-primary`}>{text}</p>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n// .filter((element)=>{return element.length!==0})\r\n","import React from 'react'\r\n\r\nexport default function About(props) {\r\n    return (\r\n        <>\r\n            <div className=\"container\">\r\n                <div className=\"accordion\" id=\"accordionExample\">\r\n                    <div className=\"accordion-item\" style={{backgroundColor: props.backColor, color: props.textColor}}>\r\n                        <h2 className=\"accordion-header\" id=\"headingOne\">\r\n                            <button className=\"accordion-button\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseOne\" aria-expanded=\"true\" aria-controls=\"collapseOne\">\r\n                                Accordion Item #1\r\n                            </button>\r\n                        </h2>\r\n                        <div id=\"collapseOne\" className=\"accordion-collapse collapse show\" aria-labelledby=\"headingOne\" data-bs-parent=\"#accordionExample\">\r\n                            <div className=\"accordion-body\">\r\n                                <strong>This is the first item's accordion body.</strong> It is shown by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"accordion-item\" style={{backgroundColor: props.backColor, color: props.textColor}}>\r\n                        <h2 className=\"accordion-header\" id=\"headingTwo\">\r\n                            <button className=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseTwo\" aria-expanded=\"false\" aria-controls=\"collapseTwo\">\r\n                                Accordion Item #2\r\n                            </button>\r\n                        </h2>\r\n                        <div id=\"collapseTwo\" className=\"accordion-collapse collapse\" aria-labelledby=\"headingTwo\" data-bs-parent=\"#accordionExample\">\r\n                            <div className=\"accordion-body\">\r\n                                <strong>This is the second item's accordion body.</strong> It is hidden by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"accordion-item\" style={{backgroundColor: props.backColor, color: props.textColor}}>\r\n                        <h2 className=\"accordion-header\" id=\"headingThree\">\r\n                            <button className=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseThree\" aria-expanded=\"false\" aria-controls=\"collapseThree\">\r\n                                Accordion Item #3\r\n                            </button>\r\n                        </h2>\r\n                        <div id=\"collapseThree\" className=\"accordion-collapse collapse\" aria-labelledby=\"headingThree\" data-bs-parent=\"#accordionExample\">\r\n                            <div className=\"accordion-body\">\r\n                                <strong>This is the third item's accordion body.</strong> It is hidden by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Alert(props) {\r\n    return (\r\n        <>\r\n            <div className={`alert alert-${props.mode} alert-dismissible fade show`} style={{display: props.display, position: 'absolute', width: '100vw'}} role=\"alert\">\r\n                <strong>{props.alertType}</strong> : {props.alert}\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import './App.css';\nimport React, { useState } from 'react';\n\nimport Navbar from './components/Navbar';\nimport Input from './components/Input';\nimport About from './components/About';\nimport Alert from './components/Alert';\n\nfunction App() {\n  const [alert, setAlert] = useState(\"\");\n  const [alertType, setAlertType] = useState(\"\");\n  const [display, setDisplay] = useState(\"none\");\n  const [theme, setTheme] = useState(\"light\");\n  const [mode, setMode] = useState(\"secondary\");\n  const [textColor, setTextColor] = useState(\"dark\");\n  const [backColor, setBackColor] = useState(\"white\");\n  const showAlert = (type, message) => {\n    setAlert(message);\n    setAlertType(type);\n    setTimeout(() => {\n      setAlert(\"\");\n      setAlertType(\"\");\n      setDisplay(\"none\");\n    }, 1600);\n  }\n  const displayChanger = () => {\n    setDisplay(\"block\");\n    setTimeout(() => {\n      setDisplay(\"none\")\n    }, 1600);\n  }\n  const lightMode = () => {\n    setTheme(\"light\");\n    setMode(\"secondary\");\n    setTextColor(\"dark\");\n    setBackColor(\"white\");\n    showAlert(\"Success\", \"Light mode has been enabled!\");\n    setDisplay(\"block\");\n    document.body.style.backgroundColor = \"white\";\n    document.body.style.color = \"black\";\n  }\n  const darkMode = () => {\n    setTheme(\"dark\");\n    setMode(\"primary\");\n    setTextColor(\"white\");\n    setBackColor(\"rgb(1 14 80)\");\n    showAlert(\"Success\", \"Dark mode has been enabled!\");\n    setDisplay(\"block\");\n    document.body.style.backgroundColor = \"rgb(1 14 80)\";\n    document.body.style.color = \"white\";\n  }\n  const cobaltMode = () => {\n    setTheme(\"success\");\n    setMode(\"success\");\n    setTextColor(\"white\");\n    setBackColor(\"#025a19\");\n    showAlert(\"Success\", \"Cobalt mode has been enabled!\");\n    setDisplay(\"block\");\n    document.body.style.backgroundColor = \"#025a19\";\n    document.body.style.color = \"white\";\n  }\n  const bloodMode = () => {\n    setTheme(\"danger\");\n    setMode(\"danger\");\n    setTextColor(\"white\");\n    setBackColor(\"#760015\");\n    showAlert(\"Success\", \"Blood mode has been enabled!\");\n    setDisplay(\"block\");\n    document.body.style.backgroundColor = \"#760015\";\n    document.body.style.color = \"white\";\n  }\n  return (\n    <>\n      <Navbar title={\"TextEditor\"} theme={theme} mode={mode} textColor={textColor} lightMode={lightMode} darkMode={darkMode} cobaltMode={cobaltMode} bloodMode={bloodMode} />\n      <Alert mode={mode} alert={alert} alertType={alertType} display={display} />\n      <Input heading={\"Enter your text here to Analyse\"} mode={mode} backColor={backColor} textColor={textColor} showAlert={showAlert} displayChanger={displayChanger} />\n      <About backColor={backColor} textColor={textColor} />\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}